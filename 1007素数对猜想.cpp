/*1007. 素数对猜想 (20)
时间限制
400 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
让我们定义 dn 为：dn = pn+1 - pn，其中 pi 是第i个素数。显然有 d1=1 且对于n>1有 dn 是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。

现给定任意正整数N (< 105)，请计算不超过N的满足猜想的素数对的个数。

输入格式：每个测试输入包含1个测试用例，给出正整数N。

输出格式：每个测试用例的输出占一行，不超过N的满足猜想的素数对的个数。

输入样例：
20
输出样例：
4*/
//翻译一下就是能够找到20之前有多少对素数的距离是2
//
#include <iostream>
using namespace std;//这是为了引用标准库空间 否则的话 每一个都要写上std::cout显得麻烦
bool isprime(int a) {//该函数用来判断是否为素数 是就返回true
    for (int i = 2; i * i <= a; i++) {
        if (a % i == 0)
            return false;
    }
    return true;
}//对于大于2且平方小雨等于a的所有数 如果a都无法整除 那么这个数是质数

int main() {
    int N;
    cin >> N;//获取从键盘键入的值 并且将其设置为int类型 这个N也就是所设置测试上限
    int cnt = 0;//这个变量初始化为0是为了输出
    for (int i = 5; i <= N; i++) {
        if (isprime(i-2) && isprime(i))
            cnt++;//对于从5到N 每当如果i和i-2都通过了质数检测函数 就将cnt的数值增加1
            //为什么从5开始呢 因为1不是质数 而且i从5开始 但是i-2是从3开始的 没毛病！
    }
    cout << cnt;
    return 0;
}
//这题的主要思路就是先写一个判断是否为质数的函数
//然后调用这个函数如果同时满足i和i-2都是质数的情况
//计数器加一 最终计数器的值就是最终结果